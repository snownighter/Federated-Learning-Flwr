import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
def a():
    # accuracy
    acc = [0.9487849473953247, 0.9547948837280273, 0.9550561904907227, 0.9574078917503357, 0.9689051508903503, 0.9681212306022644, 0.974131166934967, 0.9738698601722717, 0.978050708770752, 0.9798797965049744, 0.9840606451034546, 0.9817088842391968, 0.9770054817199707, 0.9843219518661499, 0.9817088842391968, 0.9817088842391968, 0.9824928045272827, 0.9874575138092041, 0.9871962666511536, 0.9879801273345947, 0.9892866611480713, 0.9871962666511536, 0.9866736531257629, 0.9856284260749817, 0.9879801273345947, 0.9877188205718994, 0.9892866611480713, 0.9877188205718994, 0.9898092746734619, 0.9916383624076843, 0.9892866611480713, 0.9898092746734619, 0.991377055644989, 0.9905931353569031, 0.989025354385376, 0.9895479679107666, 0.991377055644989, 0.9929448366165161, 0.9926835894584656, 0.9903318285942078, 0.9926835894584656, 0.991377055644989, 0.9929448366165161, 0.9905931353569031, 0.9929448366165161, 0.9903318285942078, 0.992160975933075, 0.9916383624076843, 0.9924222826957703, 0.993728756904602]
    epochs = range(1, len(acc)+1)
    val_acc = [0.9184952974319458, 0.9320794343948364, 0.916405439376831, 0.931034505367279, 0.9258098006248474, 0.9331243634223938, 0.9258098006248474, 0.9362591505050659, 0.9289446473121643, 0.9362591505050659, 0.9341692924499512, 0.92476487159729, 0.9289446473121643, 0.9278996586799622, 0.9299895763397217, 0.9299895763397217, 0.9320794343948364, 0.9289446473121643, 0.931034505367279, 0.92476487159729, 0.9320794343948364, 0.9289446473121643, 0.931034505367279, 0.9289446473121643, 0.9289446473121643, 0.9268547296524048, 0.9320794343948364, 0.9299895763397217, 0.931034505367279, 0.9299895763397217, 0.9331243634223938, 0.9289446473121643, 0.9320794343948364, 0.92476487159729, 0.9299895763397217, 0.9258098006248474, 0.9352142214775085, 0.9352142214775085, 0.9383490085601807, 0.9341692924499512, 0.9331243634223938, 0.9414837956428528, 0.9331243634223938, 0.9383490085601807, 0.9341692924499512, 0.9352142214775085, 0.9289446473121643, 0.9289446473121643, 0.9331243634223938, 0.9373040795326233]
    #plt.figure()
    #plt.plot(epochs, acc, "b-", label="Training Acc")
    #plt.plot(epochs, val_acc, "r--", label="Validation Acc")
    #plt.title("Training and Validation Accuracy")
    #plt.xlabel("Epochs"); plt.ylabel("Accuracy")
    _,ax = plt.subplots(1,1)
    ax.plot(epochs, acc, "b-", label="Training Acc")
    ax.plot(epochs, val_acc, "r--", label="Validation Acc")
    ax.set_title("Training and Validation Accuracy")
    ax.set_xlabel("Epochs")
    ax.set_ylabel("Accuracy")
    ax.yaxis.set_major_locator(ticker.MultipleLocator(0.1))
    ax.set_ylim(0,1)
    ax.legend(loc='lower right')
    plt.show()
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.utils import shuffle
import utils as uts
def b():
    test = pd.read_csv('../data/minmax-test.csv')
    size = pd.read_csv('../data/minmax-train.csv')
    x_test, y_test = uts.preprocess(test, size)
    label = y_test.columns.tolist() # label for classification_report
    #y_pre = np.argmax(model.predict(x_test), axis=1) # predict value
    y_act = LabelEncoder().fit_transform(test.iloc[:, 10]) # actual value
    #print(y_pre)
    print(y_act)
    pd.DataFrame(y_act).to_csv('../result(tf1)/test.csv', index=True)
b()